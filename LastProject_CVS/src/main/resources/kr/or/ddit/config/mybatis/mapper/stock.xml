<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stock">


<!-- 재고를 생성 -->
<!-- 	아 이 디 : insertStock
  		반 환 값 : int
  		매개변수 : Map(mem_id, 날짜)
  		설    명 : stock 추가
  		작 성 자 : 한수정
  		일    시 : 2018-09-17     
	-->
<insert id="insertStock" parameterType="stockVo">
	INSERT into stock(  stock_id  ,
						mem_id    ,
						stock_info,
						stock_date,
						stock_kind  
					 ) 	
			   VALUES( 
						#{stock_id  },
						#{mem_id    },
						#{stock_info},
						#{stock_date},
						#{stock_kind}  
					 )
 </insert>
 
 
<!-- 재고리스트를 생성 -->
<!-- 	아 이 디 : insertStockList
  		반 환 값 : int
  		매개변수 : stockListVo
  		설    명 : stockList 추가
  		작 성 자 : 한수정
  		일    시 : 2018-09-17     
	-->
	
<insert id="insertStockList" parameterType="stockListVo">
	INSERT INTO STOCK_LIST(  bcd_id    ,
						stcklist_amount,
						stcklist_exdate,
						stck_date      ,
						stcklist_info  ,
						stcklist_kind  ,
						stock_id       ,
						splylist_id    ,
						prod_id   
					 ) 	
			   VALUES(  #{bcd_id         },
						#{stcklist_amount},
						#{stcklist_exdate},
						#{stck_date      },
					    #{stcklist_info  },
					    #{stcklist_kind  },
					    #{stock_id       },
					    #{splylist_id    },					
					    #{prod_id    }					
					 )
 </insert>
 
 
<!-- 재고리스트 업데이트 -->
<!-- 	아 이 디 : updateStockList
  		반 환 값 : int
  		매개변수 : stockListVo
  		설    명 : stockList 업데이트
  		작 성 자 : 한수정
  		일    시 : 2018-09-18     
	-->
 <update id="updateStockList" parameterType="stockListVo">
 
 	UPDATE STOCK_LIST SET   
						 stcklist_amount = #{stcklist_amount }
						,stcklist_exdate = #{stcklist_exdate }
						,stck_date       = #{stck_date       }
						,stcklist_info   = #{stcklist_info   }
						,stcklist_kind   = #{stcklist_kind   }
						,stock_id        = #{stock_id        }
						,splylist_id     = #{splylist_id     }
						,prod_id         = #{prod_id         }
					    
 			   WHERE bcd_id =  #{bcd_id         }	
				 
 </update>
 


<!-- 재고 조회 -->
<!-- 	아 이 디 : getStock
	  		반 환 값 : stockVo
	  		매개변수 : Map(mem_id, 오늘날짜)
	  		설    명 : 재고 조회
	  		작 성 자 : 김현경
	  		일    시 : 2018-09-10     
-->
<select id="getStock" parameterType="Map" resultType="stockVo">
	select * 
	from stock 
	where mem_id=#{mem_id} and to_char(stock_date,'yyyyMMdd') = #{stock_date}
</select>




<!-- 	아 이 디 : getAllStock
	  		반 환 값 : stockVo
	  		매개변수 : mem_id
	  		설    명 : 전체날짜 재고리스트 조회
	  		작 성 자 : 한수정
	  		일    시 : 2018-09-17     
-->
<select id="getAllStock" parameterType="String" resultType="stockVo">
	select * 
	from stock 
	where mem_id=#{mem_id}
	ORDER BY stock_date DESC, stock_kind DESC
</select>


<!-- 	아 이 디 : getStockListByBcdID
	  		반 환 값 : stockListVo
	  		매개변수 : bcd_id
	  		설    명 : bcd_id 로 재고리스트(1건) 조회
	  		작 성 자 : 한수정
	  		일    시 : 2018-09-18     
-->
<select id="getStockListByBcdID" parameterType="String" resultType="stockListVo">
	select * 
	from stock_list 
	where bcd_id=#{bcd_id}
</select>

<!-- 	아 이 디 : getStockListByAttr
	  		반 환 값 : presentStockListVo
	  		매개변수 : map(검색컬럼 , 검색값)
	  		설    명 : 현재고 리스트 지정한 값으로 조회
	  		작 성 자 : 한수정
	  		일    시 : 2018-09-21     
	 -->
<select id="getStockListByAttr" parameterType="Map" resultType="presentStockListVo">
SELECT   
      -- STOCK_ID 새로생성
      -- STOCK_DATE 새로생성
         ST.MEM_ID
        ,ST.STOCK_INFO
        ,ST.STOCK_KIND

      -- STL.BCD_ID   새로생성
      -- STL.STOCK_ID 새로 생성
        ,STL.STCKLIST_AMOUNT   -- 변경
        ,STL.STCKLIST_EXDATE
        ,STL.STCK_DATE         -- 다음날 변경
        ,STL.STCKLIST_INFO
        ,STL.STCKLIST_KIND     -- 변경
        ,STL.SPLYLIST_ID
        ,STL.PROD_ID
        
-- 화면에서 필요한 데이터       
        ,P.PROD_NAME

FROM STOCK ST
JOIN STOCK_LIST STL
ON  ST.STOCK_ID = STL.STOCK_ID
JOIN PROD P
ON  STL.PROD_ID = P.PROD_ID
WHERE 1 = 1
  and st.mem_id = #{mem_id}
  and st.stock_id =  #{stock_id}
  and to_char(st.stock_date , 'yyyy-mm-dd') =  #{stock_date}


<!-- 	SELECT a.prod_id, 
		   a.prod_name,
		   a.prod_price,
		   a.event_id,  
		   b.supply_date, 
		   c.splylist_id, 
		   c.stcklist_exdate, 		
		   c.stcklist_amount, 
	       c.bcd_id
	FROM prod a, supply b, stock_list c
	WHERE ${cul} = #{param} AND c.prod_id = a.prod_id AND b.supply_state = '12' -->
</select>




	
<!-- 편의점의 현재고 리스트 조회 -->
<!-- 	아 이 디 : getStockList
	  		반 환 값 : presentStockListVo
	  		매개변수 : String(재고코드)
	  		설    명 : 편의점의 현재고 리스트 조회
	  		작 성 자 : 김현경
	  		일    시 : 2018-09-10     
	 -->
<select id="getStockList" parameterType="String" resultType="presentStockListVo">
	SELECT a.prod_id, a.prod_name, b.supply_date, c.stcklist_exdate, a.prod_price, c.stcklist_amount, a.event_id, c.bcd_id
	FROM prod a, supply b, stock_list c
	WHERE c.stock_id = #{stock_id} AND c.prod_id = a.prod_id AND b.supply_state = '12'
</select>

<!-- 재고 상품 조회 -->
<!-- 	아 이 디 : getStockProd
	  		반 환 값 : presentStockListVo
	  		매개변수 : String(제품바코드)
	  		설    명 : 재고 상품 조회
	  		작 성 자 : 김현경
	  		일    시 : 2018-09-10     
	 -->
	 
<select id="getStockProd" parameterType="String" resultType="presentStockListVo">
	SELECT a.prod_id, a.prod_name, b.supply_date, c.stcklist_exdate, a.prod_price, c.stcklist_amount, a.event_id, c.bcd_id
	FROM prod a, supply b, stock_list c
	WHERE a.prod_id =#{prod_id} and c.prod_id = a.prod_id AND b.supply_state = '12'
</select>


<!-- 바코드조회한 상품 조회 -->
<!-- 	아 이 디 : getBarcodeProd
	  		반 환 값 : presentStockListVo
	  		매개변수 : String(재고바코드)
	  		설    명 : 재고 상품 조회
	  		작 성 자 : 한수정
	  		일    시 : 2018-09-12     
	 -->	 
<select id="getBarcodeProd" parameterType="Map" resultType="presentStockListVo">
SELECT    T.PROD_NAME  					  	 -- 상품명
	        , T.PROD_COST  						 -- 단가
	        , NVL(SUM(T.stcklist_amount) , 0)  	 -- 수량
	        , T.PROD_PRICE  					 -- 가격
	        , T.EVENT_NAME  					 -- 이벤트명
            , T.prod_id  						 -- 상품id
            , T.bcd_id  						 -- 상품id
            , T.STCKLIST_EXDATE					 -- 유통기한
--	        , T.EVENT_DISCOUNT  				 -- 할인율
FROM (
      SELECT    P.PROD_NAME    	  		-- 상품명
	            , P.PROD_COST     		-- 단가
	            , STL.stcklist_amount 	-- 수량
	            , P.PROD_PRICE    		-- 가격
                , p.prod_id
                , STL.bcd_id 			-- 수량
                , STL.STCKLIST_EXDATE 	-- 유통기한
	            , (SELECT EVENT_NAME FROM EVENT WHERE EVENT_ID = P.EVENT_ID) AS EVENT_NAME
	            , (SELECT EVENT.EVENT_DISCOUNT FROM EVENT WHERE EVENT_ID = P.EVENT_ID) AS EVENT_DISCOUNT
      FROM MEMBER MEM
      JOIN STOCK  ST
      ON   MEM.MEM_ID = ST.MEM_ID
      JOIN STOCK_LIST STL
      ON  ST.STOCK_ID = STL.STOCK_ID
      JOIN PROD P 
      ON STL.PROD_ID  = P.PROD_ID
      WHERE MEM.MEM_ID     = #{mem_id}
        AND  ST.STOCK_KIND = #{stock_kind}
        AND  STL.PROD_ID = (SELECT PROD_ID FROM STOCK_LIST WHERE BCD_ID = #{bcd_id} )
        AND STL.BCD_ID = #{bcd_id}
)T
GROUP BY    T.PROD_NAME , T.PROD_COST , T.PROD_PRICE  , T.EVENT_NAME, T.EVENT_DISCOUNT,T.prod_id, T.bcd_id, T.STCKLIST_EXDATE

</select>


<!-- stock_id 로 stockList 조회 -->
<!-- 	아 이 디 : getStockListByStockID
	  		반 환 값 : presentStockListVo
	  		매개변수 : String(stockID)
	  		설    명 : 편의점의 현 재고 리스트 조회
	  		작 성 자 : 한수정
	  		일    시 : 2018-09-17     
	 -->
<select id="getStockListByStockID" parameterType="String" resultType="presentStockListVo">
	SELECT a.prod_id, a.prod_name, b.supply_date, c.stcklist_exdate, a.prod_price, c.stcklist_amount, a.event_id, c.bcd_id
	FROM prod a, supply b, stock_list c
	WHERE c.stock_id = #{stock_id} AND c.prod_id = a.prod_id AND b.supply_state = '12'
</select>



<!-- mem_id 로 재고리스트 조회 -->
<!-- 	아 이 디 : getStockListByMemId
	  		반 환 값 : presentStockListVo
	  		매개변수 : String(mem_id)
	  		설    명 : 해당 편의점 id의 최근재고 조회
	  		작 성 자 : 한수정
	  		일    시 : 2018-09-19    
	 -->
<select id="getStockListByMemId" parameterType="String" resultType="presentStockListVo">

select t.prod_id, p.prod_name,p.prod_price,e.event_name, t.stcklist_amount from 
(select sl.prod_id, sum(sl.stcklist_amount) stcklist_amount from stock_list sl
join stock s
on sl.STOCK_ID = s.STOCK_ID
where s.MEM_ID= #{mem_id}
group by sl.prod_id) t
left join prod p
on p.prod_id = t.prod_id
left join event e
on e.EVENT_ID = p.event_id

</select>






</mapper>